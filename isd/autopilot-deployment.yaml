apiVersion: apps/v1
kind: Deployment
metadata:
  name: oes-autopilot
  labels:
    app: oes
    app.kubernetes.io/managed-by: Helm
    chart: isdargo-4.1.0
    component: autopilot
    heritage: Helm
    release: isd411
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: oes
      component: autopilot
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        configmap/checksum: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        prometheus.io/scrape: "true"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8090"
      creationTimestamp: null
      labels:
        app: oes
        chart: isdargo-4.1.0
        component: autopilot
        heritage: Helm
        release: isd411
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-autopilot:v4.1.1-rc1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /mgmt/health
            port: 8090
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: oes-autopilot
        ports:
        - containerPort: 8090
          name: backend
          protocol: TCP
        - containerPort: 9090
          name: metricfetcher
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8090
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opsmx/conf/autopilot.properties
          name: autopilot-config-volume
          subPath: autopilot.properties
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: opsmx11-secret
      initContainers:
      - command:
        - /bin/bash
        - -c
        - sleep 30;echo Waiting for oes-db to be up and running; pg_isready -h oes-db
          -p 5432 && echo PostgreSQL DB is ready to receive connections
        image: quay.io/opsmxpublic/postgres:9.6.5
        imagePullPolicy: IfNotPresent
        name: db-check
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: autopilot-config-volume
        secret:
          defaultMode: 420
          secretName: oes-autopilot-config
      - name: bootstrap-config-volume
        secret:
          defaultMode: 420
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
